import("//build/toolchain/emscripten/emscripten.gni")

assert(is_typescript)
template("typescript_target") {
    assert(defined(invoker.sources))
    tsc_path = "$emscripten_node_path/tsc"
    if (host_os == "win") {
        tsc_path += ".cmd"
    }
    action("typescript_compile_$target_name") {
        script = "//build/toolchain/typescript/typescript_compile_wrapper.py"
        sources = invoker.sources
        outputs = []
        html_sources = []
        typescript_sources = []
        foreach(source_file, sources) {
            file_extension = get_path_info(source_file, "extension")
            if (file_extension == "ts") {
                typescript_sources += [source_file]
                file_dir = get_path_info(source_file, "dir")
                file_name = get_path_info(source_file, "name")
                outputs +=  [ "$root_build_dir/$file_dir/${file_name}.js" ]
            } else {
                html_sources += [source_file]
                outputs +=  ["$root_build_dir/$source_file" ]
            }
        }

        args = ["/outDir", rebase_path(root_build_dir)]
        if (html_sources != []) {
            args += ["/html"] + rebase_path(html_sources)
        }
        if (typescript_sources != []) {
            args += ["/typescript"] + [ "$tsc_path", "--target", "es5", "--module", "CommonJS", "--esModuleInterop", "true", "--forceConsistentCasingInFileNames", "true", "--outDir", rebase_path(root_build_dir)] + rebase_path(typescript_sources) 
        }
    }    
    executable(target_name) {
        forward_variables_from(invoker, ["deps", "data" ])    
        ldflags = invoker.sources
        if (!defined(deps)) {
            deps = []
        }
        if(!defined(data)) {
            data = []
        }
        data += invoker.sources + ["BUILD.gn"]
        deps += [":typescript_compile_$target_name"]
    }
}