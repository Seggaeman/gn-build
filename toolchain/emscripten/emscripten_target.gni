import("//build/toolchain/emscripten/emscripten.gni")

template("emscripten_target")
{
    #For now only these targets are supported
    assert(is_emscripten && defined(invoker.emscripten_target_type) 
    && (invoker.emscripten_target_type == "executable" || invoker.emscripten_target_type == "shared_library" || invoker.emscripten_target_type == "static_library"))

    target(invoker.emscripten_target_type, target_name) {
        forward_variables_from(invoker, "*")

        if (!defined(defines)) {
            defines = []
        }
        if (!defined(deps)) {
            deps = []
        }
        if(!defined(ldflags)) {
            ldflags = []
        }
        if (!defined(exported_functions)) {
            exported_functions = []
        }

        if(emscripten_target_type == "executable") {
            exported_functions += [ "_main" ]
        } else if(emscripten_target_type == "static_library") {
            defines += [ string_to_upper(target_name) + "_STATIC" ]
        }

        if (exported_functions != []) {
            exported_functions_ldflag = "-sEXPORTED_FUNCTIONS=['" + string_join("','", exported_functions) + "']"
            ldflags += [ exported_functions_ldflag ]
        }
        
        if (defined(static_deps))
        {
            foreach(static_dep, static_deps) {
                deps += [ static_dep ]
                static_dep_target_name = get_label_info(static_dep, "name")
                defines += [ string_to_upper(static_dep_target_name) + "_STATIC" ]
            }
        }

        if(defined(javascript_libraries)) {
            foreach(javascript_library, javascript_libraries) {
                ldflags += ["--js-library", rebase_path(javascript_library)]
            }
        }
        # emar doesn't support --embind-emit-tsd
    }  
}