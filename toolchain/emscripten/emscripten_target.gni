import("//build/toolchain/emscripten/emscripten.gni")

template("emscripten_target")
{
    #For now only these targets are supported
    assert(is_emscripten && defined(invoker.emscripten_target_type) 
    && (invoker.emscripten_target_type == "executable" || invoker.emscripten_target_type == "shared_library" || invoker.emscripten_target_type == "static_library"))
    #if (defined(invoker.html_sources)) {
    #    copy("copy_html_sources_$target_name") {
    #        sources = invoker.html_sources
    #        outputs = [ "$root_build_dir/{{source_target_relative}}" ]
    #    }
    #}
    target(invoker.emscripten_target_type, target_name) {
        forward_variables_from(invoker, "*")
        if (!defined(cflags)) {
            cflags = []
        }
        cflags += ["-fms-extensions"]
        if (!defined(data)) {
            data = []
        }
        if (!defined(defines)) {
            defines = []
        }
        if (!defined(deps)) {
            deps = []
        }
        if(!defined(ldflags)) {
            ldflags = []
        }

        if (defined(static_deps))
        {
            foreach(static_dep, static_deps) {
                deps += [ static_dep ]
                static_dep_target_name = get_label_info(static_dep, "name")
                defines += [ string_to_upper(static_dep_target_name) + "_STATIC" ]
            }
        }
        data += ["BUILD.gn"]

        if(defined(html_sources)) {
            data += html_sources
            deps += [ ":copy_html_sources_$target_name" ]
        }
        
        # emar doesn't support --embind-emit-tsd
        if(emscripten_target_type == "static_library") {
            defines += [ string_to_upper(target_name) + "_STATIC" ]
        } else {
            ldflags += ["--embind-emit-tsd", rebase_path(root_build_dir) + "/${target_name}.d.ts"]
        }
        #if(defined(typescript_sources)) {
        #    data += typescript_sources
        #    tsc_path = "$emscripten_node_path/tsc"
        #    if (host_os == "win") {
        #        tsc_path += ".cmd"
        #    }
        #    typescript_command_line = [ "--typescript_compile_start" ] + [ "$tsc_path", "--target", "es5", "--module", "CommonJS", "--esModuleInterop", "true", "--forceConsistentCasingInFileNames", "true", "--outDir", rebase_path(root_build_dir)] + rebase_path(typescript_sources, root_build_dir) + ["--typescript_compile_end"]      
        #    if (emscripten_target_type == "static_library") {
        #        arflags += typescript_command_line
        #    } else {
        #        ldflags += typescript_command_line
        #    }
        #}       
    }
}